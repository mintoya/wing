[kbplacer_plugin_action.py:65]: Plugin version: 0.13
[kbplacer_plugin_action.py:66]: Python version: '3.13.5 (main, Jun 21 2025, 09:35:00) [GCC 15.1.1 20250425]'
[kbplacer_plugin_action.py:67]: KiCad version: 9.0.3 with 4.2.3 gtk3 (phoenix) wxWidgets 3.2.8
[kbplacer_dialog.py:586]: Language: en
[kbplacer_plugin_action.py:75]: GUI state: {"layout_path": "/home/paa/Github/wing/kicad_nrf52840/ergogen/points/points.json", "key_distance": [19.05, 19.05], "key_info": {"annotation_format": "SW{}", "position_option": "Default", "position": {"x": 0.0, "y": 0.0, "orientation": 0.0, "side": "Back"}, "template_path": ""}, "enable_diode_placement": true, "route_switches_with_diodes": true, "optimize_diodes_orientation": true, "diode_info": {"annotation_format": "D{}", "position_option": "Relative", "position": null, "template_path": ""}, "additional_elements": [], "route_rows_and_columns": false, "template_path": "", "generate_outline": false, "outline_delta": 5.0}
[key_placer.py:362]: Set key 1U distance: 19050000/19050000
[key_placer.py:124]: Switches by nets: defaultdict(<class 'list'>, {frozenset({'/Col3', '/Row4'}): ['SW1'], frozenset({'/Col5', '/Row2'}): ['SW12'], frozenset({'/Col3', '/Row3'}): ['SW13'], frozenset({'/Col1', '/Row2'}): ['SW9'], frozenset({'unconnected-(D2-K-Pad1)', '/Col3'}): ['SW2'], frozenset({'/Col4', '/Row3'}): ['SW14'], frozenset({'/Col4', '/Row4'}): ['SW20'], frozenset({'/Col2', '/Row3'}): ['SW16'], frozenset({'/Col3', '/Row2'}): ['SW7'], frozenset({'/Col4', '/Row2'}): ['SW8'], frozenset({'/Col4', 'unconnected-(D3-K-Pad1)'}): ['SW3'], frozenset({'/Col5', '/Row3'}): ['SW18'], frozenset({'/Row1', '/Col1'}): ['SW4'], frozenset({'/Col1', '/Row3'}): ['SW15'], frozenset({'Net-(D11-K)', '/Col5'}): ['SW6'], frozenset({'/Col6', 'Net-(D11-K)'}): ['SW11'], frozenset({'/Col6', '/Row3'}): ['SW19'], frozenset({'/Row1', '/Col2'}): ['SW5'], frozenset({'/Col6', '/Row2'}): ['SW17'], frozenset({'/Col2', '/Row2'}): ['SW10'], frozenset({'/Col6', '/Row4'}): ['SW22'], frozenset({'/Col5', '/Row4'}): ['SW21']})
[key_placer.py:128]: Diodes by switch: {'SW1': ['D1'], 'SW13': ['D13'], 'SW12': ['D12'], 'SW4': ['D4'], 'SW10': ['D10'], 'SW19': ['D19'], 'SW5': ['D5'], 'SW6': ['D6'], 'SW2': ['D2'], 'SW22': ['D22'], 'SW8': ['D8'], 'SW18': ['D18'], 'SW3': ['D3'], 'SW9': ['D9'], 'SW17': ['D17'], 'SW15': ['D15'], 'SW7': ['D7'], 'SW14': ['D14'], 'SW20': ['D20'], 'SW11': ['D11'], 'SW21': ['D21'], 'SW16': ['D16']}
[board_modifier.py:64]: Searching for SW1 footprint in /home/paa/Github/wing/kicad_nrf52840/V3.kicad_pcb
[key_placer.py:558]: Looking for connection template between SW1 and other elements
[board_modifier.py:98]: Getting SW1 footprint position: (76920000, 52730000)
[key_placer.py:602]: Got connection template: 
[key_placer.py:124]: Switches by nets: defaultdict(<class 'list'>, {frozenset({'/Col3', '/Row4'}): ['SW1'], frozenset({'/Col5', '/Row2'}): ['SW12'], frozenset({'/Col3', '/Row3'}): ['SW13'], frozenset({'/Col1', '/Row2'}): ['SW9'], frozenset({'unconnected-(D2-K-Pad1)', '/Col3'}): ['SW2'], frozenset({'/Col4', '/Row3'}): ['SW14'], frozenset({'/Col4', '/Row4'}): ['SW20'], frozenset({'/Col2', '/Row3'}): ['SW16'], frozenset({'/Col3', '/Row2'}): ['SW7'], frozenset({'/Col4', '/Row2'}): ['SW8'], frozenset({'/Col4', 'unconnected-(D3-K-Pad1)'}): ['SW3'], frozenset({'/Col5', '/Row3'}): ['SW18'], frozenset({'/Row1', '/Col1'}): ['SW4'], frozenset({'/Col1', '/Row3'}): ['SW15'], frozenset({'Net-(D11-K)', '/Col5'}): ['SW6'], frozenset({'/Col6', 'Net-(D11-K)'}): ['SW11'], frozenset({'/Col6', '/Row3'}): ['SW19'], frozenset({'/Row1', '/Col2'}): ['SW5'], frozenset({'/Col6', '/Row2'}): ['SW17'], frozenset({'/Col2', '/Row2'}): ['SW10'], frozenset({'/Col6', '/Row4'}): ['SW22'], frozenset({'/Col5', '/Row4'}): ['SW21']})
[key_placer.py:128]: Diodes by switch: {'SW1': ['D1'], 'SW13': ['D13'], 'SW12': ['D12'], 'SW4': ['D4'], 'SW10': ['D10'], 'SW19': ['D19'], 'SW5': ['D5'], 'SW6': ['D6'], 'SW2': ['D2'], 'SW22': ['D22'], 'SW8': ['D8'], 'SW18': ['D18'], 'SW3': ['D3'], 'SW9': ['D9'], 'SW17': ['D17'], 'SW15': ['D15'], 'SW7': ['D7'], 'SW14': ['D14'], 'SW20': ['D20'], 'SW11': ['D11'], 'SW21': ['D21'], 'SW16': ['D16']}
[board_modifier.py:98]: Getting SW1 footprint position: (76920000, 52730000)
[board_modifier.py:98]: Getting D1 footprint position: (139565000, 85520000)
[key_placer.py:900]: Element info updated: ElementInfo(annotation_format='D{}', position_option=<PositionOption.RELATIVE: 'Relative'>, position=ElementPosition(x=62.645, y=32.79, orientation=0.0, side=<Side.FRONT: 'Front'>), template_path='')
[kle_serial.py:897]: User layout: {'matrix_outer_bottom': {'x': -0.1736482, 'y': -0.9848078, 'r': 8, 'meta': {'stagger': -1, 'spread': 19, 'splay': 18, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_bottom', 'name': 'matrix_outer_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'row': 'bottom', 'bind': [10, 0, 0, 0]}}, 'matrix_outer_home': {'x': -2.8179371, 'y': 17.8302855, 'r': 8, 'meta': {'stagger': -1, 'spread': 19, 'splay': 18, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_home', 'name': 'matrix_outer_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'row': 'home', 'bind': [10, 10, 10, 0]}}, 'matrix_outer_top': {'x': -5.462226, 'y': 36.6453788, 'r': 8, 'meta': {'stagger': -1, 'spread': 19, 'splay': 18, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_top', 'name': 'matrix_outer_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'row': 'top', 'bind': [10, 10, 10, 0]}}, 'matrix_pinky_bottom': {'x': 18.2239258, 'y': 4.6302853, 'r': 8, 'meta': {'stagger': 3, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_bottom', 'name': 'matrix_pinky_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'row': 'bottom', 'bind': [10, 0, 0, 10]}}, 'matrix_pinky_home': {'x': 15.5796369, 'y': 23.4453786, 'r': 8, 'meta': {'stagger': 3, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_home', 'name': 'matrix_pinky_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_pinky_top': {'x': 12.9353479, 'y': 42.2604719, 'r': 8, 'meta': {'stagger': 3, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_top', 'name': 'matrix_pinky_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_ring_bottom': {'x': 35.9256343, 'y': 15.1967189, 'r': 2, 'meta': {'stagger': 8, 'spread': 19, 'splay': -6, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_bottom', 'name': 'matrix_ring_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'row': 'bottom', 'bind': [10, 0, 0, 10]}}, 'matrix_ring_home': {'x': 35.2625439, 'y': 34.1851446, 'r': 2, 'meta': {'stagger': 8, 'spread': 19, 'splay': -6, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_home', 'name': 'matrix_ring_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_ring_top': {'x': 34.5994535, 'y': 53.1735703, 'r': 2, 'meta': {'stagger': 8, 'spread': 19, 'splay': -6, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_top', 'name': 'matrix_ring_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_middle_bottom': {'x': 54.7395625, 'y': 20.8567634, 'r': 0, 'meta': {'stagger': 5, 'spread': 19, 'splay': -2, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_bottom', 'name': 'matrix_middle_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'row': 'bottom', 'bind': [10, 10, 0, 10]}}, 'matrix_middle_home': {'x': 54.7395625, 'y': 39.8567634, 'r': 0, 'meta': {'stagger': 5, 'spread': 19, 'splay': -2, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_home', 'name': 'matrix_middle_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_middle_top': {'x': 54.7395625, 'y': 58.8567634, 'r': 0, 'meta': {'stagger': 5, 'spread': 19, 'splay': -2, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_top', 'name': 'matrix_middle_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_index_bottom': {'x': 73.7395625, 'y': 15.8567635, 'r': 0, 'meta': {'stagger': -5, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_bottom', 'name': 'matrix_index_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'row': 'bottom', 'bind': [10, 10, 0, 0]}}, 'matrix_index_home': {'x': 73.7395625, 'y': 34.8567635, 'r': 0, 'meta': {'stagger': -5, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_home', 'name': 'matrix_index_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_index_top': {'x': 73.7395625, 'y': 53.8567635, 'r': 0, 'meta': {'stagger': -5, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_top', 'name': 'matrix_index_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_inner_bottom': {'x': 92.7395625, 'y': 9.8567634, 'r': 0, 'meta': {'stagger': -6, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_bottom', 'name': 'matrix_inner_bottom', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}, 'row': 'bottom', 'bind': [10, 0, 0, 0]}}, 'matrix_inner_home': {'x': 92.7395625, 'y': 28.8567633, 'r': 0, 'meta': {'stagger': -6, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_home', 'name': 'matrix_inner_home', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}, 'row': 'home', 'bind': [10, 0, 10, 10]}}, 'matrix_inner_top': {'x': 92.7395625, 'y': 47.8567633, 'r': 0, 'meta': {'stagger': -6, 'spread': 19, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_top', 'name': 'matrix_inner_top', 'zone': {'columns': {'outer': {'key': {'stagger': -1, 'splay': 18}, 'rows': {'tmot': {'skip': True}}, 'name': 'outer'}, 'pinky': {'key': {'stagger': 3}, 'rows': {'tmot': {'skip': True}}, 'name': 'pinky'}, 'ring': {'key': {'stagger': 8, 'splay': -6}, 'rows': {'tmot': {'skip': True}}, 'name': 'ring'}, 'middle': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': 5, 'splay': -2}, 'name': 'middle'}, 'index': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -5}, 'name': 'index'}, 'inner': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}}, 'rows': {'bottom': {}, 'home': {}, 'top': {}, 'tmot': {}}, 'name': 'matrix'}, 'col': {'rows': {'tmot': {'skip': True}}, 'key': {'stagger': -6}, 'name': 'inner'}, 'row': 'top', 'bind': [10, 0, 10, 10]}}, 'thumb_a': {'x': 88.6326978, 'y': -15.628336, 'r': -10, 'meta': {'stagger': 0, 'spread': 21, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'a_default', 'name': 'thumb_a', 'zone': {'columns': {'a': {'key': {'splay': 0, 'spread': 21}, 'rows': {}, 'name': 'a'}, 'b': {'key': {'splay': -25, 'spread': 21}, 'rows': {}, 'name': 'b'}, 'c': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'c'}, 'd': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'd'}}, 'name': 'thumb'}, 'col': {'key': {'splay': 0, 'spread': 21}, 'rows': {}, 'name': 'a'}, 'row': 'default', 'bind': [0, 10, 0, 0]}}, 'thumb_b': {'x': 109.3136606, 'y': -19.2749477, 'r': -35, 'meta': {'stagger': 0, 'spread': 21, 'splay': -25, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'b_default', 'name': 'thumb_b', 'zone': {'columns': {'a': {'key': {'splay': 0, 'spread': 21}, 'rows': {}, 'name': 'a'}, 'b': {'key': {'splay': -25, 'spread': 21}, 'rows': {}, 'name': 'b'}, 'c': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'c'}, 'd': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'd'}}, 'name': 'thumb'}, 'col': {'key': {'splay': -25, 'spread': 21}, 'rows': {}, 'name': 'b'}, 'row': 'default', 'bind': [0, 0, 0, 10]}}, 'thumb_c': {'x': 126.5158535, 'y': -31.3200529, 'r': -55, 'meta': {'stagger': 0, 'spread': 21, 'splay': -20, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'c_default', 'name': 'thumb_c', 'zone': {'columns': {'a': {'key': {'splay': 0, 'spread': 21}, 'rows': {}, 'name': 'a'}, 'b': {'key': {'splay': -25, 'spread': 21}, 'rows': {}, 'name': 'b'}, 'c': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'c'}, 'd': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'd'}}, 'name': 'thumb'}, 'col': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'c'}, 'row': 'default', 'bind': [0, 0, 0, 0]}}, 'thumb_d': {'x': 138.5609587, 'y': -48.5222458, 'r': -75, 'meta': {'stagger': 0, 'spread': 21, 'splay': -20, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'adjust': {}, 'width': 18, 'height': 18, 'padding': 19, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'd_default', 'name': 'thumb_d', 'zone': {'columns': {'a': {'key': {'splay': 0, 'spread': 21}, 'rows': {}, 'name': 'a'}, 'b': {'key': {'splay': -25, 'spread': 21}, 'rows': {}, 'name': 'b'}, 'c': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'c'}, 'd': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'd'}}, 'name': 'thumb'}, 'col': {'key': {'splay': -20, 'spread': 21}, 'rows': {}, 'name': 'd'}, 'row': 'default', 'bind': [0, 0, 0, 0]}}}
[key_placer.py:662]: Layout offset: (25866101, 29076316)
[board_modifier.py:85]: Setting SW1 footprint position: (95249999, 38100000)
[board_modifier.py:85]: Setting SW2 footprint position: (114299999, 43113158)
[board_modifier.py:85]: Setting SW3 footprint position: (75056890, 43798149)
[board_modifier.py:85]: Setting SW4 footprint position: (133349999, 49128947)
[board_modifier.py:85]: Setting SW5 footprint position: (53335773, 54739966)
[board_modifier.py:85]: Setting SW6 footprint position: (95249999, 57150000)
[board_modifier.py:85]: Setting SW7 footprint position: (34889785, 60369835)
[board_modifier.py:85]: Setting SW8 footprint position: (114299999, 62163158)
[board_modifier.py:85]: Setting SW9 footprint position: (75721725, 62836544)
[board_modifier.py:85]: Setting SW10 footprint position: (133349999, 68178947)
[board_modifier.py:85]: Setting SW11 footprint position: (55987021, 73604572)
[board_modifier.py:85]: Setting SW12 footprint position: (95249999, 76200000)
[board_modifier.py:85]: Setting SW13 footprint position: (37541032, 79234442)
[board_modifier.py:85]: Setting SW14 footprint position: (114299999, 81213158)
[board_modifier.py:85]: Setting SW15 footprint position: (76386560, 81874939)
[board_modifier.py:85]: Setting SW16 footprint position: (133349999, 87228947)
[board_modifier.py:85]: Setting SW17 footprint position: (58638268, 92469179)
[board_modifier.py:85]: Setting SW18 footprint position: (40192280, 98099049)
[board_modifier.py:85]: Setting SW19 footprint position: (129232327, 112781113)
[board_modifier.py:85]: Setting SW20 footprint position: (149967713, 116437321)
[board_modifier.py:85]: Setting SW21 footprint position: (167215175, 128514123)
[board_modifier.py:85]: Setting SW22 footprint position: (179291978, 145761585)
[key_placer.py:999]: Diode info: [ElementInfo(annotation_format='D{}', position_option=<PositionOption.RELATIVE: 'Relative'>, position=ElementPosition(x=62.645, y=32.79, orientation=0.0, side=<Side.FRONT: 'Front'>), template_path='')]
[board_modifier.py:98]: Getting SW1 footprint position: (95249999, 38100000)
[board_modifier.py:85]: Setting D1 footprint position: (157894999, 70890000)
[board_modifier.py:98]: Getting SW2 footprint position: (114299999, 43113158)
[board_modifier.py:85]: Setting D2 footprint position: (176944999, 75903158)
[board_modifier.py:98]: Getting SW3 footprint position: (75056890, 43798149)
[board_modifier.py:85]: Setting D3 footprint position: (138808082, 74381895)
[board_modifier.py:98]: Getting D3 footprint position: (138808082, 74381895)
[board_modifier.py:98]: Getting SW4 footprint position: (133349999, 49128947)
[board_modifier.py:85]: Setting D4 footprint position: (195994999, 81918947)
[board_modifier.py:98]: Getting SW5 footprint position: (53335773, 54739966)
[board_modifier.py:85]: Setting D5 footprint position: (119934602, 78492357)
[board_modifier.py:98]: Getting D5 footprint position: (119934602, 78492357)
[board_modifier.py:98]: Getting SW6 footprint position: (95249999, 57150000)
[board_modifier.py:85]: Setting D6 footprint position: (157894999, 89940000)
[board_modifier.py:98]: Getting SW7 footprint position: (34889785, 60369835)
[board_modifier.py:85]: Setting D7 footprint position: (101488614, 84122226)
[board_modifier.py:98]: Getting D7 footprint position: (101488614, 84122226)
[board_modifier.py:98]: Getting SW8 footprint position: (114299999, 62163158)
[board_modifier.py:85]: Setting D8 footprint position: (176944999, 94953158)
[board_modifier.py:98]: Getting SW9 footprint position: (75721725, 62836544)
[board_modifier.py:85]: Setting D9 footprint position: (139472917, 93420290)
[board_modifier.py:98]: Getting D9 footprint position: (139472917, 93420290)
[board_modifier.py:98]: Getting SW10 footprint position: (133349999, 68178947)
[board_modifier.py:85]: Setting D10 footprint position: (195994999, 100968947)
[board_modifier.py:98]: Getting SW11 footprint position: (55987021, 73604572)
[board_modifier.py:85]: Setting D11 footprint position: (122585850, 97356963)
[board_modifier.py:98]: Getting D11 footprint position: (122585850, 97356963)
[board_modifier.py:98]: Getting SW12 footprint position: (95249999, 76200000)
[board_modifier.py:85]: Setting D12 footprint position: (157894999, 108990000)
[board_modifier.py:98]: Getting SW13 footprint position: (37541032, 79234442)
[board_modifier.py:85]: Setting D13 footprint position: (104139861, 102986833)
[board_modifier.py:98]: Getting D13 footprint position: (104139861, 102986833)
[board_modifier.py:98]: Getting SW14 footprint position: (114299999, 81213158)
[board_modifier.py:85]: Setting D14 footprint position: (176944999, 114003158)
[board_modifier.py:98]: Getting SW15 footprint position: (76386560, 81874939)
[board_modifier.py:85]: Setting D15 footprint position: (140137752, 112458685)
[board_modifier.py:98]: Getting D15 footprint position: (140137752, 112458685)
[board_modifier.py:98]: Getting SW16 footprint position: (133349999, 87228947)
[board_modifier.py:85]: Setting D16 footprint position: (195994999, 120018947)
[board_modifier.py:98]: Getting SW17 footprint position: (58638268, 92469179)
[board_modifier.py:85]: Setting D17 footprint position: (125237097, 116221570)
[board_modifier.py:98]: Getting D17 footprint position: (125237097, 116221570)
[board_modifier.py:98]: Getting SW18 footprint position: (40192280, 98099049)
[board_modifier.py:85]: Setting D18 footprint position: (106791109, 121851440)
[board_modifier.py:98]: Getting D18 footprint position: (106791109, 121851440)
[board_modifier.py:98]: Getting SW19 footprint position: (129232327, 112781113)
[board_modifier.py:85]: Setting D19 footprint position: (185231684, 155951149)
[board_modifier.py:98]: Getting D19 footprint position: (185231684, 155951149)
[board_modifier.py:98]: Getting SW20 footprint position: (149967713, 116437321)
[board_modifier.py:85]: Setting D20 footprint position: (182475921, 179229012)
[board_modifier.py:98]: Getting D20 footprint position: (182475921, 179229012)
[board_modifier.py:98]: Getting SW21 footprint position: (167215175, 128514123)
[board_modifier.py:85]: Setting D21 footprint position: (176286875, 198637474)
[board_modifier.py:98]: Getting D21 footprint position: (176286875, 198637474)
[board_modifier.py:98]: Getting SW22 footprint position: (179291978, 145761585)
[board_modifier.py:85]: Setting D22 footprint position: (163832990, 214758684)
[board_modifier.py:98]: Getting D22 footprint position: (163832990, 214758684)
[key_placer.py:747]: Optimizing orientation of SW1 diodes
[board_modifier.py:98]: Getting D1 footprint position: (157894999, 70890000)
[key_placer.py:760]: Rotated D1 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW2 diodes
[board_modifier.py:98]: Getting D2 footprint position: (176944999, 75903158)
[key_placer.py:760]: Rotated D2 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW3 diodes
[board_modifier.py:98]: Getting D3 footprint position: (138808082, 74381895)
[key_placer.py:760]: Rotated D3 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW4 diodes
[board_modifier.py:98]: Getting D4 footprint position: (195994999, 81918947)
[key_placer.py:760]: Rotated D4 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW5 diodes
[board_modifier.py:98]: Getting D5 footprint position: (119934602, 78492357)
[key_placer.py:760]: Rotated D5 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW6 diodes
[board_modifier.py:98]: Getting D6 footprint position: (157894999, 89940000)
[key_placer.py:760]: Rotated D6 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW7 diodes
[board_modifier.py:98]: Getting D7 footprint position: (101488614, 84122226)
[key_placer.py:760]: Rotated D7 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW8 diodes
[board_modifier.py:98]: Getting D8 footprint position: (176944999, 94953158)
[key_placer.py:760]: Rotated D8 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW9 diodes
[board_modifier.py:98]: Getting D9 footprint position: (139472917, 93420290)
[key_placer.py:760]: Rotated D9 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW10 diodes
[board_modifier.py:98]: Getting D10 footprint position: (195994999, 100968947)
[key_placer.py:760]: Rotated D10 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW11 diodes
[board_modifier.py:98]: Getting D11 footprint position: (122585850, 97356963)
[key_placer.py:760]: Rotated D11 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW12 diodes
[board_modifier.py:98]: Getting D12 footprint position: (157894999, 108990000)
[key_placer.py:760]: Rotated D12 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW13 diodes
[board_modifier.py:98]: Getting D13 footprint position: (104139861, 102986833)
[key_placer.py:760]: Rotated D13 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW14 diodes
[board_modifier.py:98]: Getting D14 footprint position: (176944999, 114003158)
[key_placer.py:760]: Rotated D14 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW15 diodes
[board_modifier.py:98]: Getting D15 footprint position: (140137752, 112458685)
[key_placer.py:760]: Rotated D15 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW16 diodes
[board_modifier.py:98]: Getting D16 footprint position: (195994999, 120018947)
[key_placer.py:760]: Rotated D16 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW17 diodes
[board_modifier.py:98]: Getting D17 footprint position: (125237097, 116221570)
[key_placer.py:760]: Rotated D17 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW18 diodes
[board_modifier.py:98]: Getting D18 footprint position: (106791109, 121851440)
[key_placer.py:760]: Rotated D18 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW19 diodes
[board_modifier.py:98]: Getting D19 footprint position: (185231684, 155951149)
[key_placer.py:760]: Rotated D19 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW20 diodes
[board_modifier.py:98]: Getting D20 footprint position: (182475921, 179229012)
[key_placer.py:760]: Rotated D20 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW21 diodes
[board_modifier.py:98]: Getting D21 footprint position: (176286875, 198637474)
[key_placer.py:760]: Rotated D21 to minimize distance
[key_placer.py:747]: Optimizing orientation of SW22 diodes
[board_modifier.py:98]: Getting D22 footprint position: (163832990, 214758684)
[key_placer.py:760]: Rotated D22 to minimize distance
[key_placer.py:424]: Routing SW1 with D1
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW1:2' at (87689999, 40640000) with pad 'D1:2' at (150274999, 70890000) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 40640000), (120024999, 40640000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 40640000), (117939999, 70890000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW12 with D12
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW12:2' at (87689999, 78740000) with pad 'D12:2' at (150274999, 108990000) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 78740000), (120024999, 78740000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 78740000), (117939999, 108990000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW13 with D13
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW13:2' at (30408105, 82801872) with pad 'D13:2' at (96594018, 104047332) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(30408105, 82801872), (62428422, 78301709)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(30408105, 82801872), (64573699, 108547493)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW9 with D9
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW9:2' at (68254975, 65638837) with pad 'D9:2' at (131857559, 93686224) using coordinate system rotated by 358.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(68254975, 65638837), (100570275, 64510360)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(68254975, 65638837), (99542256, 94814698)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW2 with D2
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW2:2' at (106739999, 45653158) with pad 'D2:2' at (169324999, 75903158) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 45653158), (139074999, 45653158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 45653158), (136989999, 75903158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW14 with D14
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW14:2' at (106739999, 83753158) with pad 'D14:2' at (169324999, 114003158) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 83753158), (139074999, 83753158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 83753158), (136989999, 114003158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW20 with D20
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW20:2' at (142318039, 114181729) with pad 'D20:2' at (176233982, 174858360) using coordinate system rotated by 35.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(142318039, 114181729), (168805319, 132728322)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(142318039, 114181729), (149746700, 156311765)]
[board_modifier.py:460]: Track added
[board_modifier.py:455]: Adding track segment (F.Cu): [(149746700, 156311765), (176233982, 174858360)]
[board_modifier.py:460]: Track added
[key_placer.py:424]: Routing SW16 with D16
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW16:2' at (125789999, 89768947) with pad 'D16:2' at (188374999, 120018947) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 89768947), (158124999, 89768947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 89768947), (156039999, 120018947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW7 with D7
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW7:2' at (27756858, 63937265) with pad 'D7:2' at (93942771, 85182725) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(27756858, 63937265), (59777175, 59437101)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(27756858, 63937265), (61922452, 89682886)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW8 with D8
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW8:2' at (106739999, 64703158) with pad 'D8:2' at (169324999, 94953158) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 64703158), (139074999, 64703158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(106739999, 64703158), (136989999, 94953158)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW3 with D3
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW3:2' at (67590140, 46600442) with pad 'D3:2' at (131192724, 74647829) using coordinate system rotated by 358.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(67590140, 46600442), (99905442, 45471966)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(67590140, 46600442), (98877420, 75776303)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW18 with D18
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW18:2' at (33059353, 101666479) with pad 'D18:2' at (99245266, 122911939) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(33059353, 101666479), (65079671, 97166316)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(33059353, 101666479), (67224946, 127412100)]
[board_modifier.py:460]: Track added
[board_modifier.py:455]: Adding track segment (F.Cu): [(67224946, 127412100), (99245266, 122911939)]
[board_modifier.py:460]: Track added
[key_placer.py:424]: Routing SW4 with D4
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW4:2' at (125789999, 51668947) with pad 'D4:2' at (188374999, 81918947) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 51668947), (158124999, 51668947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 51668947), (156039999, 81918947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW15 with D15
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW15:2' at (68919810, 84677232) with pad 'D15:2' at (132522394, 112724619) using coordinate system rotated by 358.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(68919810, 84677232), (101235111, 83548756)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(68919810, 84677232), (100207092, 113853094)]
[board_modifier.py:460]: Track added
[board_modifier.py:455]: Adding track segment (F.Cu): [(100207092, 113853094), (132522394, 112724619)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW6 with D6
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW6:2' at (87689999, 59690000) with pad 'D6:2' at (150274999, 89940000) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 59690000), (120024999, 59690000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(87689999, 59690000), (117939999, 89940000)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW11 with D11
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW11:2' at (48854094, 77172002) with pad 'D11:2' at (115040007, 98417462) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(48854094, 77172002), (80874412, 72671839)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(48854094, 77172002), (83019687, 102917623)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW19 with D19
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW19:2' at (121346114, 113969744) with pad 'D19:2' at (177727449, 154627950) using coordinate system rotated by 10.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(121346114, 113969744), (153189870, 119584656)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(121346114, 113969744), (145883691, 149013036)]
[board_modifier.py:460]: Track added
[board_modifier.py:455]: Adding track segment (F.Cu): [(145883691, 149013036), (177727449, 154627950)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW5 with D5
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW5:2' at (46202846, 58307396) with pad 'D5:2' at (112388759, 79552856) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(46202846, 58307396), (78223162, 53807233)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(46202846, 58307396), (80368440, 84053018)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW17 with D17
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW17:2' at (51505341, 96036609) with pad 'D17:2' at (117691254, 117282069) using coordinate system rotated by 352.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(51505341, 96036609), (83525659, 91536446)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(51505341, 96036609), (85670934, 121782230)]
[board_modifier.py:460]: Track added
[board_modifier.py:455]: Adding track segment (F.Cu): [(85670934, 121782230), (117691254, 117282069)]
[board_modifier.py:460]: Track added
[key_placer.py:424]: Routing SW10 with D10
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW10:2' at (125789999, 70718947) with pad 'D10:2' at (188374999, 100968947) using coordinate system rotated by 0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 70718947), (158124999, 70718947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(125789999, 70718947), (156039999, 100968947)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW22 with D22
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW22:2' at (174881854, 139116586) with pad 'D22:2' at (161860789, 207398329) using coordinate system rotated by 75.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(174881854, 139116586), (183250767, 170349797)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(174881854, 139116586), (153491874, 176165116)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:424]: Routing SW21 with D21
[key_placer.py:426]: Using internal autorouter method
[board_modifier.py:532]: Routing at F.Cu layer
[board_modifier.py:549]: Netclass: Default, track width: 200000
[board_modifier.py:611]: Routing pad 'SW21:2' at (160798291, 123778218) with pad 'D21:2' at (171916223, 192395535) using coordinate system rotated by 55.0 degree(s)
[board_modifier.py:455]: Adding track segment (F.Cu): [(160798291, 123778218), (179344884, 150265499)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[board_modifier.py:455]: Adding track segment (F.Cu): [(160798291, 123778218), (153369628, 165908253)]
[board_modifier.py:465]: Could not add track segment due to detected collision
[key_placer.py:458]: Removing dangling tracks
[key_placer.py:470]: Removing 94fa9b64-4cea-4d09-bd80-d27230f04cb9
[key_placer.py:470]: Removing 850351cb-fd13-4e73-b3de-838e2d872c4e
[key_placer.py:470]: Removing 098437a7-88cb-43ef-aeed-de84ea1ddcd7
[key_placer.py:470]: Removing 6b7dd8dd-8eb3-4b4d-9e5b-7e7555a0166a
[key_placer.py:470]: Removing cf59fd71-1484-4027-bdd1-9489d0c60533
[key_placer.py:470]: Removing 428587d1-8268-499a-8e33-4f9dd3d8ac7c
[key_placer.py:458]: Removing dangling tracks
[key_placer.py:470]: Removing 59ee2075-bda3-4365-9823-618f5efcadfc
[key_placer.py:470]: Removing d9fa1f02-82af-4ffe-ac02-2f09ca94e307
[key_placer.py:470]: Removing e71064e0-545a-44aa-8470-29e5eaff5b9a
[key_placer.py:458]: Removing dangling tracks
[key_placer.py:470]: Removing 86ea82cb-7fd3-4d1e-a0e0-81f1542d8766
[key_placer.py:470]: Removing e5ab012f-feb8-4f69-95e5-bfaf90b96d29
[key_placer.py:458]: Removing dangling tracks
[key_placer.py:470]: Removing aaa4deb3-c122-45d9-8b8f-9819f17d05de
[key_placer.py:470]: Removing 5291e180-3f21-4590-9f47-5f7240b27a0f
[key_placer.py:458]: Removing dangling tracks
